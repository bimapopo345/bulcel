>> dari kode saya ambil dibawah ini, buatkan  admin_Workhop_List.jsx, isinya 1 file ya jangan aneh aneh : ( buatkan tampilan aja jangan backend dulu )

batkan juga lah route nya anjing di sidebar /admin kan ada list banyak, salah satunya ada Workshop list, pas ditekan arah kesini dong, jangan lupa di app.js juga

duh pas di /admin, sebelum kamu edit tadi malah ilang anjing isi isinya ya allah, jangan diilangin codingan yg ada!! kan saya cuman minta tambahin path route aja, jangan ubah yg /admin

saat di /admin >> itukan disidebar ada Workshop List, pas ditekan larikan file admin_Workhop_List.jsx

Sekalian file code dibawha semua itu ga responsive dan berantakan css nya, benerin dan bagusan yaaa..... bair masuk ketable dll


>> note karena tanpa backend dulu karena mau test, anggap ja resi apapun berhasil dulu

ikutin dari yg punya saya tadi aja, tapi bagusin dikit dan responsive kalau bisa, jangan ada animation malah susah nanti


sekalian bagusan design nya biar ga kacau banget

--=-= code  Workhop_List.jsx

import React, { useState } from 'react';
import WorkshopSidebar from './WorkshopSidebar';
import WorkshopSearch from './WorkshopSearch';
import WorkshopList from './WorkshopList';
import WorkshopPagination from './WorkshopPagination';
import { WorkshopItem } from './WorkshopListItem';

const MOCK_WORKSHOPS: WorkshopItem[] = [
  {
    id: 1,
    topic: 'Hand-Build Your Own Pottery',
    category: 'Pottery',
    price: 'Rp.100,000',
    quantity: 23,
    status: 'Available'
  },
  {
    id: 2,
    topic: 'Wheel Throwing for Beginners',
    category: 'Pottery',
    price: 'Rp.350,000',
    quantity: 17,
    status: 'Available'
  },
  {
    id: 3,
    topic: 'Crochet Your First Plushie',
    category: 'Knitting',
    price: 'Rp.200,000',
    quantity: 12,
    status: 'Available'
  },
  {
    id: 4,
    topic: 'Batik Tulis on Cotton',
    category: 'Textiles',
    price: 'Rp.300,000',
    quantity: 15,
    status: 'Available'
  },
  {
    id: 5,
    topic: 'Urban Sketching : Scenes of Jakarta',
    category: 'Painting',
    price: 'Rp.150,000',
    quantity: 30,
    status: 'Available'
  }
];

const WorkshopDashboard: React.FC = () => {
  const [workshops, setWorkshops] = useState<WorkshopItem[]>(MOCK_WORKSHOPS);
  const [currentPage, setCurrentPage] = useState(1);
  const [searchQuery, setSearchQuery] = useState('');
  
  const handleSearch = (query: string) => {
    setSearchQuery(query);
    setCurrentPage(1);
    
    if (!query.trim()) {
      setWorkshops(MOCK_WORKSHOPS);
      return;
    }
    
    const filteredWorkshops = MOCK_WORKSHOPS.filter(workshop => 
      workshop.topic.toLowerCase().includes(query.toLowerCase()) ||
      workshop.category.toLowerCase().includes(query.toLowerCase())
    );
    
    setWorkshops(filteredWorkshops);
  };
  
  const handlePageChange = (page: number) => {
    setCurrentPage(page);
    // In a real application, this would fetch data for the selected page
  };

  return (
    <div className="overflow-hidden bg-[#FCEDDA] pl-2.5 pr-[70px] pt-2.5 pb-[18px] max-md:pr-5">
      <div className="gap-5 flex max-md:flex-col max-md:items-stretch">
        <div className="w-[23%] max-md:w-full max-md:ml-0">
          <WorkshopSidebar />
        </div>
        
        <div className="w-[77%] ml-5 max-md:w-full max-md:ml-0">
          <div className="w-full self-stretch my-auto max-md:max-w-full max-md:mt-10">
            <div className="flex w-[334px] max-w-full flex-col items-stretch text-black">
              <div className="flex items-center gap-[5px] text-lg font-semibold leading-loose">
                <div className="text-black self-stretch my-auto">
                  Admin
                </div>
                <div className="self-stretch my-auto">
                  /
                </div>
                <div className="self-stretch my-auto">
                  Workshop List
                </div>
              </div>
              <div className="min-h-[70px] w-full mt-5">
                <h1 className="text-4xl font-bold flex-1">
                  Workshop List
                </h1>
                <p className="text-base font-normal leading-7 mt-[5px]">
                  Check the sales, user counts, and Topic Posted
                </p>
              </div>
            </div>
            
            <WorkshopSearch onSearch={handleSearch} />
            
            <div className="flex w-full flex-col items-stretch mt-[25px] max-md:max-w-full">
              <WorkshopList workshops={workshops} />
              
              <WorkshopPagination 
                currentPage={currentPage} 
                totalPages={68} 
                onPageChange={handlePageChange} 
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default WorkshopDashboard;

import React from 'react';
import WorkshopListItem, { WorkshopItem } from './WorkshopListItem';

interface WorkshopListProps {
  workshops: WorkshopItem[];
}

const WorkshopList: React.FC<WorkshopListProps> = ({ workshops }) => {
  return (
    <div className="flex min-h-[360px] w-full flex-col items-stretch justify-center">
      <div className="justify-center items-center flex min-h-[60px] w-full flex-col text-lg text-black font-bold whitespace-nowrap leading-loose bg-[#FFDEB5] py-[11px] border-b-black border-b border-solid">
        <div className="flex h-[38px] w-full max-w-[1010px] items-center gap-[40px_49px] justify-between flex-wrap px-5">
          <div className="self-stretch flex min-w-60 items-center gap-[40px_100px] justify-between w-[380px] my-auto">
            <div className="text-black self-stretch gap-2.5 my-auto p-2.5">
              Topic
            </div>
            <div className="text-black self-stretch gap-2.5 my-auto p-2.5">
              Category
            </div>
          </div>
          <div className="text-black self-stretch gap-2.5 my-auto p-2.5">
            Price
          </div>
          <div className="text-black self-stretch gap-2.5 my-auto p-2.5">
            Quantity
          </div>
          <div className="self-stretch flex min-w-60 items-center gap-[40px_71px] justify-between w-[291px] my-auto">
            <div className="text-black self-stretch gap-2.5 my-auto p-2.5">
              Status
            </div>
            <div className="text-black self-stretch gap-2.5 w-[145px] my-auto p-2.5">
              Action
            </div>
          </div>
        </div>
      </div>
      
      <div className="w-full overflow-hidden">
        {workshops.map((workshop, index) => (
          <WorkshopListItem 
            key={workshop.id} 
            workshop={workshop} 
            isAlternate={index % 2 !== 0}
          />
        ))}
      </div>
    </div>
  );
};

export default WorkshopList;

import React from 'react';

export interface WorkshopItem {
  id: number;
  topic: string;
  category: string;
  price: string;
  quantity: number;
  status: 'Available' | 'Sold Out' | 'Coming Soon';
}

interface WorkshopListItemProps {
  workshop: WorkshopItem;
  isAlternate?: boolean;
}

const WorkshopListItem: React.FC<WorkshopListItemProps> = ({ 
  workshop, 
  isAlternate = false 
}) => {
  const { topic, category, price, quantity, status } = workshop;
  
  const getStatusColor = (status: string) => {
    switch (status) {
      case 'Available':
        return 'text-[#34c759] bg-[rgba(52,199,89,0.3)]';
      case 'Sold Out':
        return 'text-[#ff3b30] bg-[rgba(255,59,48,0.3)]';
      case 'Coming Soon':
        return 'text-[#ff9500] bg-[rgba(255,149,0,0.3)]';
      default:
        return 'text-[#34c759] bg-[rgba(52,199,89,0.3)]';
    }
  };

  return (
    <div className={`justify-center items-center flex min-h-[60px] w-full flex-col ${isAlternate ? 'bg-[#FFDEB5]' : 'bg-[#FCEDDA]'} py-[11px] border-b-black border-b border-solid`}>
      <div className="flex h-[38px] w-full max-w-[1010px] items-center gap-[23px] justify-between flex-wrap px-5">
        <div className="self-stretch flex min-w-60 items-center gap-[35px] text-lg text-black font-normal leading-loose justify-between w-[380px] my-auto">
          <div className="text-black self-stretch min-w-60 gap-2.5 my-auto p-2.5">
            {topic}
          </div>
          <div className="text-black self-stretch gap-2.5 whitespace-nowrap w-[93px] my-auto p-2.5">
            {category}
          </div>
        </div>
        <div className="self-stretch flex items-center gap-[40px_48px] text-lg text-black font-normal whitespace-nowrap leading-loose my-auto">
          <div className="text-black self-stretch gap-2.5 my-auto p-2.5">
            {price}
          </div>
          <div className="text-black self-stretch gap-2.5 my-auto p-2.5">
            {quantity}
          </div>
        </div>
        <div className="self-stretch flex min-w-60 items-center gap-[40px_78px] w-[344px] my-auto">
          <div className="self-stretch flex items-center gap-2.5 text-lg font-normal whitespace-nowrap leading-loose justify-center w-[71px] my-auto p-2.5">
            <div className="self-stretch flex w-[51px] items-center gap-2.5 justify-center my-auto">
              <div className={`self-stretch ${getStatusColor(status)} gap-2.5 my-auto px-2.5 py-[5px] rounded-lg`}>
                {status}
              </div>
            </div>
          </div>
          <div className="self-stretch flex items-center gap-[15px] justify-center w-[143px] my-auto">
            <button aria-label="View workshop">
              <img
                src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/b75ad23476b514dcc6467eca96a6ea4670fbb2f0?placeholderIfAbsent=true"
                className="aspect-[1] object-contain w-6 self-stretch shrink-0 my-auto cursor-pointer hover:opacity-80 transition-opacity"
                alt="View"
              />
            </button>
            <button aria-label="Edit workshop">
              <img
                src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/c6a3c1304edf69e22c8856fd5a014ad7491168a6?placeholderIfAbsent=true"
                className="aspect-[1] object-contain w-6 self-stretch shrink-0 my-auto cursor-pointer hover:opacity-80 transition-opacity"
                alt="Edit"
              />
            </button>
            <button aria-label="Delete workshop">
              <img
                src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/a6007ff882df7cdd4e164e6e28384e26c7a302b6?placeholderIfAbsent=true"
                className="aspect-[1] object-contain w-6 self-stretch shrink-0 my-auto cursor-pointer hover:opacity-80 transition-opacity"
                alt="Delete"
              />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default WorkshopListItem;

import React from 'react';

interface WorkshopPaginationProps {
  currentPage: number;
  totalPages: number;
  onPageChange: (page: number) => void;
}

const WorkshopPagination: React.FC<WorkshopPaginationProps> = ({
  currentPage,
  totalPages,
  onPageChange,
}) => {
  const renderPageNumbers = () => {
    const pageNumbers = [];
    
    // Always show first page
    pageNumbers.push(
      <div
        key={1}
        onClick={() => onPageChange(1)}
        className={`${
          currentPage === 1
            ? 'text-[color:var(--sds-color-text-brand-on-brand)] bg-[#FF5126]'
            : 'text-[color:var(--sds-color-text-default-default)]'
        } text-[length:var(--sds-typography-body-size-medium)] font-[number:var(--sds-typography-body-font-weight-regular)] rounded-[var(--sds-size-radius-200)] self-stretch w-8 h-8 pt-[var(--sds-size-space-200)] pr-[var(--sds-size-space-300)] pb-[var(--sds-size-space-200)] pl-[var(--sds-size-space-300)] my-auto cursor-pointer`}
      >
        1
      </div>
    );

    // Show current page and adjacent pages
    if (currentPage > 3) {
      pageNumbers.push(
        <div
          key="ellipsis1"
          className="text-black text-[length:var(--sds-typography-scale-03)] font-bold self-stretch leading-[1.4] pt-[var(--sds-size-space-200)] pr-[var(--sds-size-space-400)] pb-[var(--sds-size-space-200)] pl-[var(--sds-size-space-400)] my-auto rounded-lg"
        >
          ...
        </div>
      );
    }

    // Pages around current page
    for (let i = Math.max(2, currentPage - 1); i <= Math.min(totalPages - 1, currentPage + 1); i++) {
      if (i === 1 || i === totalPages) continue; // Skip first and last page as they're always shown
      
      pageNumbers.push(
        <div
          key={i}
          onClick={() => onPageChange(i)}
          className={`${
            currentPage === i
              ? 'text-[color:var(--sds-color-text-brand-on-brand)] bg-[#FF5126]'
              : 'text-[color:var(--sds-color-text-default-default)]'
          } text-[length:var(--sds-typography-body-size-medium)] font-[number:var(--sds-typography-body-font-weight-regular)] rounded-[var(--sds-size-radius-200)] self-stretch pt-[var(--sds-size-space-200)] pr-[var(--sds-size-space-300)] pb-[var(--sds-size-space-200)] pl-[var(--sds-size-space-300)] my-auto cursor-pointer`}
        >
          {i}
        </div>
      );
    }

    // Show ellipsis if needed
    if (currentPage < totalPages - 2) {
      pageNumbers.push(
        <div
          key="ellipsis2"
          className="text-black text-[length:var(--sds-typography-scale-03)] font-bold self-stretch leading-[1.4] pt-[var(--sds-size-space-200)] pr-[var(--sds-size-space-400)] pb-[var(--sds-size-space-200)] pl-[var(--sds-size-space-400)] my-auto rounded-lg"
        >
          ...
        </div>
      );
    }

    // Always show last page if there's more than one page
    if (totalPages > 1) {
      pageNumbers.push(
        <div
          key={totalPages}
          onClick={() => onPageChange(totalPages)}
          className={`${
            currentPage === totalPages
              ? 'text-[color:var(--sds-color-text-brand-on-brand)] bg-[#FF5126]'
              : 'text-[color:var(--sds-color-text-default-default)]'
          } text-[length:var(--sds-typography-body-size-medium)] font-[number:var(--sds-typography-body-font-weight-regular)] rounded-[var(--sds-size-radius-200)] self-stretch pt-[var(--sds-size-space-200)] pr-[var(--sds-size-space-300)] pb-[var(--sds-size-space-200)] pl-[var(--sds-size-space-300)] my-auto cursor-pointer`}
        >
          {totalPages}
        </div>
      );
    }

    return pageNumbers;
  };

  return (
    <div className="items-center self-center flex gap-[var(--sds-size-space-200)] text-base text-[color:var(--sds-color-text-default-default)] font-normal whitespace-nowrap leading-none flex-wrap mt-10">
      <div
        onClick={() => currentPage > 1 && onPageChange(currentPage - 1)}
        className={`justify-center items-center rounded-[var(--sds-size-radius-200)] ${
          currentPage === 1 ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer hover:bg-gray-100'
        } self-stretch flex gap-[var(--sds-size-space-200)] text-[color:var(--sds-color-text-default-secondary)] pt-[var(--sds-size-space-200)] pr-[var(--sds-size-space-300)] pb-[var(--sds-size-space-200)] pl-[var(--sds-size-space-300)] my-auto`}
      >
        <img
          src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/a5d343729f3554976d79de2376698becd752cf20?placeholderIfAbsent=true"
          className="aspect-[1] object-contain w-4 self-stretch shrink-0 my-auto"
          alt="Previous"
        />
        <div className="text-[color:var(--sds-color-text-default-secondary)] text-[length:var(--sds-typography-body-size-medium)] font-[number:var(--sds-typography-body-font-weight-regular)] self-stretch my-auto">
          Previous
        </div>
      </div>
      
      <div className="items-center self-stretch flex min-w-60 gap-[var(--sds-size-space-200)] my-auto">
        {renderPageNumbers()}
      </div>
      
      <div
        onClick={() => currentPage < totalPages && onPageChange(currentPage + 1)}
        className={`justify-center items-center rounded-[var(--sds-size-radius-200)] ${
          currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer hover:bg-gray-100'
        } self-stretch flex gap-[var(--sds-size-space-200)] pt-[var(--sds-size-space-200)] pr-[var(--sds-size-space-300)] pb-[var(--sds-size-space-200)] pl-[var(--sds-size-space-300)] my-auto`}
      >
        <div className="text-[color:var(--sds-color-text-default-default)] text-[length:var(--sds-typography-body-size-medium)] font-[number:var(--sds-typography-body-font-weight-regular)] self-stretch my-auto">
          Next
        </div>
        <img
          src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/7a75dc50837b580d941598b5af5cc28472142982?placeholderIfAbsent=true"
          className="aspect-[1] object-contain w-4 self-stretch shrink-0 my-auto"
          alt="Next"
        />
      </div>
    </div>
  );
};

export default WorkshopPagination;

import React, { useState } from 'react';

interface WorkshopSearchProps {
  onSearch: (searchText: string) => void;
}

const WorkshopSearch: React.FC<WorkshopSearchProps> = ({ onSearch }) => {
  const [searchText, setSearchText] = useState('');

  const handleSearch = () => {
    onSearch(searchText);
  };

  return (
    <div className="flex max-w-full w-[1010px] items-center gap-10 flex-wrap mt-[25px]">
      <div className="self-stretch text-base text-black font-normal whitespace-nowrap w-[120px] my-auto rounded-[30px]">
        <div className="text-black border-[color:var(--Black,#000)] bg-[#FCEDDA] px-3 py-[15px] rounded-[30px] border-2 border-solid max-md:pl-5">
          FILTERS
        </div>
      </div>
      <div className="items-stretch self-stretch flex min-w-60 min-h-[60px] flex-col justify-center w-[400px] bg-[#FEE4C4] my-auto px-5 py-1.5 rounded-lg">
        <div className="flex w-full items-center gap-[40px_73px] justify-between flex-1 h-full">
          <div className="self-stretch flex items-center gap-[15px] my-auto">
            <div className="self-stretch flex items-center w-12 my-auto">
              <div className="self-stretch flex min-h-12 w-12 flex-col items-center justify-center my-auto">
                <div className="flex w-full max-w-10 items-center gap-2.5 overflow-hidden justify-center rounded-[100px]">
                  <div className="self-stretch flex w-10 items-center gap-2.5 justify-center my-auto p-2">
                    <img
                      src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/60417cb378d43d78584e8f99017e90c675f4d68f?placeholderIfAbsent=true"
                      className="aspect-[1] object-contain w-6 self-stretch my-auto"
                      alt="Search icon"
                    />
                  </div>
                </div>
              </div>
            </div>
            <input
              type="text"
              placeholder="Search Text"
              className="text-[rgba(121,121,121,1)] text-[15px] font-medium self-stretch my-auto bg-transparent outline-none w-full"
              value={searchText}
              onChange={(e) => setSearchText(e.target.value)}
            />
          </div>
          <div className="self-stretch flex items-center gap-[23px] my-auto">
            <div className="self-stretch flex items-center gap-[15px] w-0 my-auto">
              <div className="border self-stretch min-h-[35px] w-0 my-auto border-[rgba(69,69,69,1)] border-solid" />
            </div>
            <button
              className="text-[#F7F7F7] self-stretch min-h-[35px] gap-[5px] text-base font-normal whitespace-nowrap w-[120px] bg-black my-auto px-2.5 py-1.5 cursor-pointer hover:bg-gray-800 transition-colors"
              onClick={handleSearch}
            >
              Search
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default WorkshopSearch;

import React, { useState } from 'react';

interface SidebarSectionProps {
  title: string;
  children: React.ReactNode;
  defaultOpen?: boolean;
}

const SidebarSection: React.FC<SidebarSectionProps> = ({ 
  title, 
  children, 
  defaultOpen = false 
}) => {
  const [isOpen, setIsOpen] = useState(defaultOpen);

  return (
    <div className="w-full mt-2.5">
      <div className="flex w-full items-center gap-[40px] justify-between">
        <div className="text-black text-xl font-bold text-center self-stretch my-auto">
          {title}
        </div>
        <div 
          className={`rotate-[1.5707963267948966rad] self-stretch flex items-center overflow-hidden my-auto px-0.5 py-[9px] cursor-pointer ${isOpen ? 'transform rotate-90' : ''}`}
          onClick={() => setIsOpen(!isOpen)}
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/43586a291a317a8278e832173ecce91273b351ef?placeholderIfAbsent=true"
            className="aspect-[1.75] object-contain w-[21px] self-stretch my-auto"
            alt="Toggle section"
          />
        </div>
      </div>
      {isOpen && (
        <div className="w-full text-xl text-black font-medium text-center mt-[5px]">
          {children}
        </div>
      )}
    </div>
  );
};

interface SidebarButtonProps {
  label: string;
  isActive?: boolean;
}

const SidebarButton: React.FC<SidebarButtonProps> = ({ label, isActive = false }) => {
  return (
    <div
      className={`text-black self-stretch w-full gap-2.5 p-2.5 rounded-md ${
        isActive ? 'bg-[#FF570C] text-[#FCEDDA]' : ''
      } cursor-pointer hover:bg-[#FCEDDA] transition-colors`}
    >
      {label}
    </div>
  );
};

const WorkshopSidebar: React.FC = () => {
  return (
    <div className="items-stretch shadow-[5px_5px_10px_0px_rgba(0,0,0,0.25)] flex min-h-[822px] grow flex-col w-full bg-[#FFDEB5] rounded-lg">
      <div className="justify-center items-center flex min-h-[120px] w-full flex-col text-[#FCEDDA] text-center bg-[#FF570C] rounded-lg">
        <div className="flex h-[45px] w-[158px] max-w-full flex-col pt-2.5 px-2.5">
          <div className="text-[#FCEDDA] text-xl font-bold">
            TIKET KARYA
          </div>
          <div className="text-[#FCEDDA] text-[64px] font-normal leading-[0.5] opacity-25 max-md:text-[40px]">
            TK
          </div>
        </div>
      </div>
      
      <div className="self-center w-[237px] max-w-full mt-[30px]">
        <div className="flex w-full items-center gap-[5px] p-2.5">
          <div className="justify-center items-center aspect-[1/1] border border-[color:var(--Dark-Cream,#FFDEB5)] self-stretch flex min-h-[55px] gap-2.5 w-[55px] h-[55px] bg-[#FF5126] my-auto px-2.5 rounded-[50px] border-solid">
            <img
              src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/97a09fd7d997b9e2073117bbe38f75ff22be3412?placeholderIfAbsent=true"
              className="aspect-[1] object-contain w-[35px] flex-1 shrink basis-[0%]"
              alt="Admin profile"
            />
          </div>
          <div className="self-stretch gap-2.5 text-lg text-black font-normal text-center leading-loose my-auto px-2.5">
            Admin XYZ
          </div>
        </div>
        
        <div className="w-full mt-5">
          <SidebarButton label="Analytics" />
          
          <SidebarSection title="WORKSHOPS" defaultOpen={true}>
            <SidebarButton label="Workshop List" isActive={true} />
            <SidebarButton label="Workshop Submissions" />
          </SidebarSection>
          
          <SidebarSection title="PAYMENTS">
            <SidebarButton label="Order Request" />
            <SidebarButton label="Refund Request" />
          </SidebarSection>
          
          <SidebarSection title="OTHER FEATURES">
            <SidebarButton label="Forum List" />
            <SidebarButton label="Creative Corner" />
          </SidebarSection>
        </div>
      </div>
    </div>
  );
};

export default WorkshopSidebar;
// Update this page (the content is just a fallback if you fail to update the page)

const Index = () => {
import React from 'react';
import WorkshopDashboard from '../components/workshop/WorkshopDashboard';

const Index: React.FC = () => {
  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-100">
      <div className="text-center">
        <h1 className="text-4xl font-bold mb-4">Welcome to Your Blank App</h1>
        <p className="text-xl text-gray-600">Start building your amazing project here!</p>
      </div>
    </div>
    <main className="min-h-screen">
      <WorkshopDashboard />
    </main>
  );
};

export default Index;