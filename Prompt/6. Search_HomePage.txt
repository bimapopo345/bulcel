>> dari kode saya ambil dibawah ini, buatkan Search_HomePage.jsx, isinya 1 file ya jangan aneh aneh : ( buatkan tampilan aja jangan backend dulu )

>> note karena tanpa backend dulu karena mau test, anggap ja resi apapun berhasil dulu

mungkin kalau kepanjangan boleh kamu pisah pisah tapi buatin folder search_homePage,sama aya homepage ada folder sendiri karena terlalu Panjang jadi dipotong potong file nya gitu 

sekalian bagusan design nya biar ga kacau banget

--=-= code Search_HomePage

import React from "react";
import { cn } from "@/lib/utils";

interface Category {
  id: string;
  name: string;
  imageUrl: string;
}

interface CategorySectionProps {
  className?: string;
  title: string;
  categories: Category[];
  onCategoryClick?: (id: string) => void;
}

export const CategorySection: React.FC<CategorySectionProps> = ({
  className,
  title,
  categories,
  onCategoryClick = () => {},
}) => {
  const scrollLeft = () => {
    const container = document.getElementById("category-container");
    if (container) {
      container.scrollBy({ left: -300, behavior: "smooth" });
    }
  };

  const scrollRight = () => {
    const container = document.getElementById("category-container");
    if (container) {
      container.scrollBy({ left: 300, behavior: "smooth" });
    }
  };

  return (
    <section className={className}>
      <h2 className="text-black text-4xl font-bold ml-[90px] mt-[55px] max-md:ml-2.5 max-md:mt-10">
        {title}
      </h2>
      
      <div className="flex w-full max-w-[1248px] items-center gap-[18px] justify-between flex-wrap mt-[42px] max-md:max-w-full max-md:mt-10">
        <button 
          onClick={scrollLeft}
          aria-label="Scroll left"
          className="cursor-pointer"
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/7278fbf29d9071329e988c287a5b507cc57b9760?placeholderIfAbsent=true"
            alt="Scroll left"
            className="aspect-[0.5] object-contain w-[26px] self-stretch shrink-0 my-auto"
          />
        </button>
        
        <div 
          id="category-container"
          className="overflow-x-auto self-stretch flex min-w-60 items-stretch gap-5 overflow-hidden w-[1160px] my-auto max-md:max-w-full"
        >
          {categories.map((category) => (
            <div 
              key={category.id}
              onClick={() => onCategoryClick(category.id)}
              className="items-stretch rounded shadow-[5px_5px_10px_0px_rgba(0,0,0,0.25)] flex min-h-[150px] flex-col text-base text-[#FCEDDA] font-semibold whitespace-nowrap text-center justify-center bg-black py-[33px] cursor-pointer"
            >
              <div className="flex max-w-full w-[275px] flex-col items-stretch">
                <img
                  src={category.imageUrl}
                  alt={category.name}
                  className="aspect-[1] object-contain w-[60px] self-center"
                />
                <div className="text-[#FCEDDA]">{category.name}</div>
              </div>
            </div>
          ))}
        </div>
        
        <button 
          onClick={scrollRight}
          aria-label="Scroll right"
          className="cursor-pointer"
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/2a7a961f04c9ffd8177812a784acb2e736410459?placeholderIfAbsent=true"
            alt="Scroll right"
            className="aspect-[0.5] object-contain w-[26px] self-stretch shrink-0 my-auto"
          />
        </button>
      </div>
    </section>
  );
};

import React, { useState } from "react";
import { cn } from "@/lib/utils";

interface FilterOption {
  id: string;
  label: string;
  checked: boolean;
}

interface FilterSidebarProps {
  className?: string;
  onApplyFilters?: (filters: any) => void;
}

export const FilterSidebar: React.FC<FilterSidebarProps> = ({ 
  className,
  onApplyFilters = () => {} 
}) => {
  const [categoryFilters, setCategoryFilters] = useState<FilterOption[]>([
    { id: "trending", label: "Trending", checked: true },
    { id: "music", label: "Music", checked: false },
    { id: "crafts", label: "Crafts", checked: false },
    { id: "photography", label: "Photography", checked: false },
    { id: "upcoming", label: "Upcoming", checked: false },
  ]);

  const [pricingFilters, setPricingFilters] = useState<FilterOption[]>([
    { id: "paid", label: "Paid", checked: true },
    { id: "free", label: "Free", checked: false },
  ]);

  const [typeFilters, setTypeFilters] = useState<FilterOption[]>([
    { id: "offline", label: "Offline", checked: false },
    { id: "online", label: "Online", checked: false },
    { id: "hybrid", label: "Offline - Online", checked: true },
  ]);

  const [languageFilters, setLanguageFilters] = useState<FilterOption[]>([
    { id: "bahasa", label: "Bahasa Indonesia", checked: true },
    { id: "english", label: "English", checked: false },
  ]);

  const [showMoreCategories, setShowMoreCategories] = useState(false);

  const toggleFilter = (
    filterId: string, 
    filterType: "category" | "pricing" | "type" | "language"
  ) => {
    switch (filterType) {
      case "category":
        setCategoryFilters(prev => 
          prev.map(filter => 
            filter.id === filterId 
              ? { ...filter, checked: !filter.checked } 
              : filter
          )
        );
        break;
      case "pricing":
        setPricingFilters(prev => 
          prev.map(filter => 
            filter.id === filterId 
              ? { ...filter, checked: !filter.checked } 
              : filter
          )
        );
        break;
      case "type":
        setTypeFilters(prev => 
          prev.map(filter => 
            filter.id === filterId 
              ? { ...filter, checked: !filter.checked } 
              : filter
          )
        );
        break;
      case "language":
        setLanguageFilters(prev => 
          prev.map(filter => 
            filter.id === filterId 
              ? { ...filter, checked: !filter.checked } 
              : filter
          )
        );
        break;
    }
  };

  const handleApplyFilters = () => {
    const filters = {
      categories: categoryFilters.filter(f => f.checked).map(f => f.id),
      pricing: pricingFilters.filter(f => f.checked).map(f => f.id),
      types: typeFilters.filter(f => f.checked).map(f => f.id),
      languages: languageFilters.filter(f => f.checked).map(f => f.id),
    };
    onApplyFilters(filters);
  };

  const handleClearFilters = () => {
    setCategoryFilters(prev => prev.map(filter => ({ ...filter, checked: false })));
    setPricingFilters(prev => prev.map(filter => ({ ...filter, checked: false })));
    setTypeFilters(prev => prev.map(filter => ({ ...filter, checked: false })));
    setLanguageFilters(prev => prev.map(filter => ({ ...filter, checked: false })));
  };

  return (
    <aside className={cn("items-center flex min-h-[774px] gap-2.5 w-full bg-[#FEE4C4] px-[9px] py-[18px] rounded-[15px]", className)}>
      <div className="self-stretch flex min-w-60 w-[261px] flex-col items-stretch justify-center my-auto">
        <div className="w-full text-xl text-black font-bold whitespace-nowrap tracking-[0.6px]">
          <h2>Filter</h2>
          <div className="border min-h-px w-full mt-1.5 border-black border-solid" />
        </div>
        
        {/* Category Section */}
        <div className="w-full text-black mt-2.5">
          <div className="w-[148px] max-w-full">
            <div className="w-full whitespace-nowrap">
              <h3 className="text-base font-bold">Category</h3>
              <div className="flex w-full gap-[15px_10px] text-sm font-normal flex-wrap mt-[15px]">
                {categoryFilters.map((filter) => (
                  <label key={filter.id} className="flex items-center gap-[15px] cursor-pointer">
                    <img
                      src={filter.checked ? "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f5ef329dfeb10c892d71980f82a8a2095dcf81f9?placeholderIfAbsent=true" : "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/7226dc466f03c33990089bfb998d59d72f5e2f2e?placeholderIfAbsent=true"}
                      alt={filter.checked ? "Selected" : "Not selected"}
                      className="aspect-[1] object-contain w-[25px] shrink-0"
                    />
                    <span 
                      className="grow shrink w-[108px]"
                      onClick={() => toggleFilter(filter.id, "category")}
                    >
                      {filter.label}
                    </span>
                  </label>
                ))}
              </div>
            </div>
            <button 
              className="text-xs font-normal mt-[15px]"
              onClick={() => setShowMoreCategories(!showMoreCategories)}
            >
              {showMoreCategories ? "Show Less" : "Show More"}
            </button>
          </div>
          <div className="border min-h-px w-full mt-2.5 border-black border-solid" />
        </div>
        
        {/* Pricing Section */}
        <div className="w-full text-black whitespace-nowrap mt-2.5">
          <div className="w-[226px] max-w-full">
            <h3 className="text-base font-bold">Pricing</h3>
            <div className="flex w-full items-center gap-[30px] text-sm font-normal mt-[15px]">
              {pricingFilters.map((filter) => (
                <label key={filter.id} className="self-stretch flex items-center gap-2.5 my-auto cursor-pointer">
                  <img
                    src={filter.checked ? "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f5ef329dfeb10c892d71980f82a8a2095dcf81f9?placeholderIfAbsent=true" : "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/7226dc466f03c33990089bfb998d59d72f5e2f2e?placeholderIfAbsent=true"}
                    alt={filter.checked ? "Selected" : "Not selected"}
                    className="aspect-[1] object-contain w-[25px] self-stretch shrink-0 my-auto"
                  />
                  <span 
                    className="self-stretch w-[63px] my-auto"
                    onClick={() => toggleFilter(filter.id, "pricing")}
                  >
                    {filter.label}
                  </span>
                </label>
              ))}
            </div>
          </div>
          <div className="border min-h-px w-full mt-[15px] border-black border-solid" />
        </div>
        
        {/* Type Section */}
        <div className="w-full text-black mt-2.5">
          <div className="w-[148px] max-w-full">
            <h3 className="text-base font-bold">Type</h3>
            <div className="flex w-full items-center gap-[15px_10px] text-sm font-normal justify-center flex-wrap mt-[15px]">
              {typeFilters.map((filter) => (
                <label key={filter.id} className="flex items-center gap-[15px] cursor-pointer">
                  <img
                    src={filter.checked ? "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f5ef329dfeb10c892d71980f82a8a2095dcf81f9?placeholderIfAbsent=true" : "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/7226dc466f03c33990089bfb998d59d72f5e2f2e?placeholderIfAbsent=true"}
                    alt={filter.checked ? "Selected" : "Not selected"}
                    className="aspect-[1] object-contain w-[25px] self-stretch shrink-0 my-auto"
                  />
                  <span 
                    className="self-stretch grow shrink w-[108px] my-auto"
                    onClick={() => toggleFilter(filter.id, "type")}
                  >
                    {filter.label}
                  </span>
                </label>
              ))}
            </div>
          </div>
          <div className="border min-h-px w-full mt-[15px] border-black border-solid" />
        </div>
        
        {/* Language Section */}
        <div className="w-full text-black mt-2.5">
          <h3 className="text-base font-bold">Language</h3>
          <div className="w-full text-sm font-normal mt-[15px]">
            <div className="flex w-[148px] max-w-full items-center gap-[15px_10px] justify-center flex-wrap">
              {languageFilters.map((filter) => (
                <label key={filter.id} className="flex items-center gap-[15px] cursor-pointer">
                  <img
                    src={filter.checked ? "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f5ef329dfeb10c892d71980f82a8a2095dcf81f9?placeholderIfAbsent=true" : "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/7226dc466f03c33990089bfb998d59d72f5e2f2e?placeholderIfAbsent=true"}
                    alt={filter.checked ? "Selected" : "Not selected"}
                    className="aspect-[1] object-contain w-[25px] self-stretch shrink-0 my-auto"
                  />
                  <span 
                    className="self-stretch grow shrink w-[108px] my-auto"
                    onClick={() => toggleFilter(filter.id, "language")}
                  >
                    {filter.label}
                  </span>
                </label>
              ))}
            </div>
            <div className="border min-h-px w-full mt-[15px] border-black border-solid" />
          </div>
        </div>
        
        {/* Action Buttons */}
        <div className="flex w-full items-center gap-[17px] text-base font-normal whitespace-nowrap text-center mt-2.5">
          <button
            onClick={handleClearFilters}
            className="text-[rgba(2,2,2,1)] self-stretch w-[120px] my-auto"
          >
            Clear
          </button>
          <button
            onClick={handleApplyFilters}
            className="self-stretch bg-[rgba(41,41,41,1)] min-h-[35px] gap-2.5 text-white w-[120px] my-auto py-1.5"
          >
            Apply
          </button>
        </div>
      </div>
    </aside>
  );
};
import React, { useState } from "react";
import { cn } from "@/lib/utils";

interface FooterProps {
  className?: string;
}

export const Footer: React.FC<FooterProps> = ({ className }) => {
  const [email, setEmail] = useState("");

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // Handle newsletter subscription
    console.log("Subscribed with email:", email);
    setEmail("");
  };

  return (
    <footer className={cn("w-full", className)}>
      <div className="border min-h-px w-full border-black border-solid max-md:max-w-full" />
      <div className="flex w-full gap-[40px_100px] flex-wrap bg-[#FFDEB5] pt-[54px] pb-[95px] px-[61px] max-md:max-w-full max-md:px-5">
        <div className="grow shrink basis-auto mt-[13px] max-md:max-w-full">
          <div className="gap-5 flex max-md:flex-col max-md:items-stretch">
            <div className="w-[26%] max-md:w-full max-md:ml-0">
              <div className="flex grow flex-col items-stretch text-xl text-black font-normal whitespace-nowrap max-md:mt-10">
                <h3 className="text-2xl max-md:mr-[9px]">Explore</h3>
                <a href="#" className="mt-[45px] max-md:mt-10">Contact</a>
                <a href="#" className="mt-[34px]">Tickets</a>
                <a href="#" className="mt-[34px]">Workshops</a>
              </div>
            </div>
            <div className="w-[49%] ml-5 max-md:w-full max-md:ml-0">
              <div className="flex grow flex-col text-xl text-black font-normal max-md:mt-10">
                <h3 className="text-2xl">Help</h3>
                <a href="#" className="self-stretch mt-[45px] max-md:mt-10">Terms & Condition</a>
                <a href="#" className="mt-[34px]">Privacy Policy</a>
                <a href="#" className="mt-[30px]">FAQ</a>
              </div>
            </div>
            <div className="w-[26%] ml-5 max-md:w-full max-md:ml-0">
              <div className="flex flex-col text-xl text-black font-normal whitespace-nowrap max-md:mt-10">
                <h3 className="text-2xl">Follow</h3>
                <a href="#" className="self-stretch mt-[50px] max-md:mt-10">Instagram</a>
                <a href="#" className="mt-[31px]">TikTok</a>
                <a href="#" className="mt-[34px]">X</a>
              </div>
            </div>
          </div>
        </div>
        <div className="flex flex-col text-xl text-black font-normal">
          <h3 className="text-2xl">Join Our Newsletter</h3>
          <form onSubmit={handleSubmit}>
            <label htmlFor="email" className="mt-[37px] block">Email</label>
            <input
              id="email"
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="bg-transparent w-full outline-none"
              required
            />
            <div className="border self-stretch shrink-0 h-px mt-6 border-black border-solid" />
          </form>
          <div className="mt-[107px] max-md:mt-10">Copyright @2025</div>
        </div>
      </div>
    </footer>
  );
};
import React from "react";
import { WorkshopCard } from "./WorkshopCard";
import { cn } from "@/lib/utils";

interface NewWorkshopsSectionProps {
  className?: string;
  title: string;
  location: string;
  workshops: Array<{
    id: string;
    title: string;
    organizer: string;
    description?: string;
    location: string;
    date: string;
    rating: string;
    participants: string;
    imageUrl: string;
    isFavorite?: boolean;
  }>;
  onJoin?: (id: string) => void;
  onToggleFavorite?: (id: string) => void;
}

export const NewWorkshopsSection: React.FC<NewWorkshopsSectionProps> = ({
  className,
  title,
  location,
  workshops,
  onJoin = () => {},
  onToggleFavorite = () => {},
}) => {
  const scrollLeft = () => {
    const container = document.getElementById("new-workshops-container");
    if (container) {
      container.scrollBy({ left: -300, behavior: "smooth" });
    }
  };

  const scrollRight = () => {
    const container = document.getElementById("new-workshops-container");
    if (container) {
      container.scrollBy({ left: 300, behavior: "smooth" });
    }
  };

  return (
    <section className={cn("", className)}>
      <h2 className="text-black text-4xl font-bold ml-[90px] mt-10 max-md:max-w-full">
        {title}
      </h2>
      
      <div className="flex w-full max-w-[1252px] items-center gap-6 justify-between flex-wrap mt-[38px] max-md:max-w-full">
        <button 
          onClick={scrollLeft}
          aria-label="Scroll left"
          className="cursor-pointer"
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/0f1e14ada146973e15d8f8eb0720cc1946bd5c1c?placeholderIfAbsent=true"
            alt="Scroll left"
            className="aspect-[0.49] object-contain w-[26px] self-stretch shrink-0 my-auto"
          />
        </button>
        
        <div 
          id="new-workshops-container"
          className="overflow-x-auto self-stretch flex min-w-60 items-stretch gap-[30px] overflow-hidden w-[1151px] my-auto max-md:max-w-full"
        >
          {workshops.map((workshop) => (
            <div key={workshop.id} className="min-h-80 max-md:max-w-full">
              <div className="flex flex-col relative min-h-[200px] w-full gap-2.5 pt-1 pb-[166px] px-1 max-md:max-w-full max-md:pb-[100px]">
                <img
                  src={workshop.imageUrl}
                  alt={workshop.title}
                  className="absolute h-full w-full object-cover inset-0"
                />
                <button
                  onClick={() => onToggleFavorite(workshop.id)}
                  className="relative items-center rounded bg-[#FFDEB5] flex min-h-[30px] w-[30px] gap-2.5 h-[30px] p-[5px]"
                  aria-label={workshop.isFavorite ? "Remove from favorites" : "Add to favorites"}
                >
                  <img
                    src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/59e3eed55391e17d9f3ede293258fb3e17d0e950?placeholderIfAbsent=true"
                    alt="Favorite"
                    className="aspect-[1] object-contain w-5 self-stretch my-auto"
                  />
                </button>
              </div>
              <div className="justify-center items-stretch flex min-h-[120px] w-full flex-col bg-[#FEE4C4] px-[11px] py-[13px] max-md:max-w-full">
                <div className="flex w-full gap-[40px_77px] justify-between flex-wrap max-md:max-w-full">
                  <h3 className="text-black text-2xl font-bold tracking-[-1.2px] w-[401px]">
                    {workshop.title}
                  </h3>
                  <div className="flex items-center gap-[5px] text-[11px] text-black font-normal whitespace-nowrap px-2.5">
                    <img
                      src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/acefdded7f7bad97c4b8fc75b82b6cf7d2eb9078?placeholderIfAbsent=true"
                      alt="Rating"
                      className="aspect-[1] object-contain w-[17px] self-stretch shrink-0 my-auto"
                    />
                    <div className="self-stretch w-4 my-auto">{workshop.rating}</div>
                  </div>
                </div>
                <div className="flex w-full max-w-[537px] gap-[40px_67px] justify-between flex-wrap mt-2 max-md:max-w-full">
                  <div className="flex min-w-60 items-center gap-[40px_69px] w-[263px]">
                    <div className="self-stretch flex w-[234px] flex-col my-auto">
                      <div className="flex items-center gap-1">
                        <div className="items-center aspect-[1/1] border border-[color:var(--Dark-Cream,#FFDEB5)] self-stretch flex min-h-4 gap-2.5 w-4 h-4 bg-[#FF5126] my-auto p-1 rounded-lg border-solid">
                          <img
                            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/5e73c1d6b886c7798064edaa7942190a9f47f42e?placeholderIfAbsent=true"
                            alt="Organizer icon"
                            className="aspect-[0.89] object-contain w-2 self-stretch my-auto"
                          />
                        </div>
                        <div className="text-black text-xs font-medium self-stretch my-auto">
                          {workshop.organizer}
                        </div>
                      </div>
                      <div className="flex items-center gap-2.5 text-xs text-black font-normal mt-[15px]">
                        <div className="self-stretch flex items-center gap-1 my-auto">
                          <img
                            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/bb6f74dee326d72c34842d575f5f759b10b11214?placeholderIfAbsent=true"
                            alt="Location"
                            className="aspect-[1] object-contain w-3 self-stretch shrink-0 my-auto"
                          />
                          <div className="self-stretch my-auto">{workshop.location}</div>
                        </div>
                        <div className="self-stretch flex items-center gap-1 my-auto">
                          <img
                            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f984529142f769e5565a02218d3ecb8e42e1188a?placeholderIfAbsent=true"
                            alt="Date"
                            className="aspect-[1] object-contain w-3 self-stretch shrink-0 my-auto"
                          />
                          <div className="self-stretch my-auto">{workshop.date}</div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="flex items-center gap-[15px]">
                    <div className="justify-center items-center shadow-[5px_5px_10px_0px_rgba(0,0,0,0.25)] self-stretch flex min-h-[30px] gap-0.5 text-xs text-black font-normal w-[120px] bg-[#FCEDDA] my-auto px-2.5 py-1.5 rounded-[50px]">
                      <img
                        src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/bb02b25ccd4288312bee34a32ac8f911ff8f836f?placeholderIfAbsent=true"
                        alt="Participants"
                        className="aspect-[2.38] object-contain w-[38px] self-stretch shrink-0 gap-[-5px] my-auto"
                      />
                      <div className="text-black self-stretch my-auto">{workshop.participants}</div>
                    </div>
                    <button
                      onClick={() => onJoin(workshop.id)}
                      className="text-[#FCEDDA] self-stretch min-h-[30px] gap-2.5 text-[13px] font-medium whitespace-nowrap w-[70px] bg-[#FF5126] my-auto px-2.5 py-[5px] rounded-[50px]"
                    >
                      Join
                    </button>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
        
        <button 
          onClick={scrollRight}
          aria-label="Scroll right"
          className="cursor-pointer"
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/6e814d2ab891cca74bd66dffc2fb21200be2cbb8?placeholderIfAbsent=true"
            alt="Scroll right"
            className="aspect-[0.51] object-contain w-[27px] self-stretch shrink-0 my-auto"
          />
        </button>
      </div>
    </section>
  );
};
import React from "react";
import { WorkshopCard } from "./WorkshopCard";
import { cn } from "@/lib/utils";

interface RecommendedSectionProps {
  className?: string;
  title: string;
  workshops: Array<{
    id: string;
    title: string;
    organizer: string;
    description?: string;
    location: string;
    date: string;
    rating: string;
    participants: string;
    imageUrl: string;
    isFavorite?: boolean;
  }>;
  onJoin?: (id: string) => void;
  onToggleFavorite?: (id: string) => void;
}

export const RecommendedSection: React.FC<RecommendedSectionProps> = ({
  className,
  title,
  workshops,
  onJoin = () => {},
  onToggleFavorite = () => {},
}) => {
  const scrollLeft = () => {
    const container = document.getElementById("recommended-container");
    if (container) {
      container.scrollBy({ left: -300, behavior: "smooth" });
    }
  };

  const scrollRight = () => {
    const container = document.getElementById("recommended-container");
    if (container) {
      container.scrollBy({ left: 300, behavior: "smooth" });
    }
  };

  return (
    <section className={cn("", className)}>
      <h2 className="text-black text-4xl font-bold ml-[90px] mt-[52px] max-md:ml-2.5 max-md:mt-10">
        {title}
      </h2>
      
      <div className="flex w-full max-w-[1251px] items-center gap-[21px] justify-between flex-wrap mt-[42px] max-md:max-w-full max-md:mt-10">
        <button 
          onClick={scrollLeft}
          aria-label="Scroll left"
          className="cursor-pointer"
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/7278fbf29d9071329e988c287a5b507cc57b9760?placeholderIfAbsent=true"
            alt="Scroll left"
            className="aspect-[0.5] object-contain w-[26px] self-stretch shrink-0 my-auto"
          />
        </button>
        
        <div 
          id="recommended-container"
          className="overflow-x-auto self-stretch flex min-w-60 items-stretch gap-[22px] overflow-hidden w-[1157px] my-auto max-md:max-w-full"
        >
          {workshops.map((workshop) => (
            <WorkshopCard
              key={workshop.id}
              workshop={workshop}
              variant="vertical"
              onJoin={onJoin}
              onToggleFavorite={onToggleFavorite}
            />
          ))}
        </div>
        
        <button 
          onClick={scrollRight}
          aria-label="Scroll right"
          className="cursor-pointer"
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/2a7a961f04c9ffd8177812a784acb2e736410459?placeholderIfAbsent=true"
            alt="Scroll right"
            className="aspect-[0.5] object-contain w-[26px] self-stretch shrink-0 my-auto"
          />
        </button>
      </div>
    </section>
  );
};
import React, { useState } from "react";
import { cn } from "@/lib/utils";

interface SearchBarProps {
  className?: string;
  onSearch?: (query: string, location: string) => void;
}

export const SearchBar: React.FC<SearchBarProps> = ({ 
  className,
  onSearch = () => {} 
}) => {
  const [searchQuery, setSearchQuery] = useState("");
  const [location, setLocation] = useState("Jakarta, Indonesia");

  const handleSearch = () => {
    onSearch(searchQuery, location);
  };

  return (
    <div className={cn("items-stretch flex min-h-[60px] w-full max-w-[800px] flex-col justify-center bg-[#FEE4C4] py-1.5 rounded-lg", className)}>
      <div className="flex w-full max-w-[784px] items-center gap-[40px_100px] justify-between flex-wrap max-md:max-w-full">
        <div className="self-stretch flex items-center gap-[15px] my-auto">
          <div className="self-stretch flex items-center w-12 my-auto">
            <div className="self-stretch flex min-h-12 w-12 flex-col items-center justify-center my-auto">
              <div className="flex w-full max-w-10 items-center gap-2.5 overflow-hidden justify-center rounded-[100px]">
                <div className="self-stretch flex w-10 items-center gap-2.5 justify-center my-auto p-2">
                  <img
                    src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/16674dde6e5312d20d5e8e175a17532d04c5497e?placeholderIfAbsent=true"
                    alt="Search icon"
                    className="aspect-[1] object-contain w-6 self-stretch my-auto"
                  />
                </div>
              </div>
            </div>
          </div>
          <input
            type="text"
            placeholder="Search Text"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="text-[rgba(121,121,121,1)] text-[15px] font-medium self-stretch my-auto bg-transparent outline-none"
          />
        </div>
        <div className="self-stretch flex min-w-60 items-center gap-[23px] font-normal my-auto">
          <div className="self-stretch flex items-center gap-[15px] text-xs text-black my-auto">
            <div className="border self-stretch w-0 shrink-0 h-[35px] my-auto border-[rgba(69,69,69,1)] border-solid" />
            <div className="self-stretch flex items-center gap-[5px] my-auto">
              <img
                src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/81eed7be6c88804f523f3c893dfe771a45f9ebc5?placeholderIfAbsent=true"
                alt="Location"
                className="aspect-[1] object-contain w-[26px] self-stretch shrink-0 my-auto"
              />
              <select 
                value={location}
                onChange={(e) => setLocation(e.target.value)}
                className="self-stretch my-auto bg-transparent outline-none"
              >
                <option value="Jakarta, Indonesia">Jakarta, Indonesia</option>
                <option value="Bali, Indonesia">Bali, Indonesia</option>
                <option value="Yogyakarta, Indonesia">Yogyakarta, Indonesia</option>
                <option value="Bandung, Indonesia">Bandung, Indonesia</option>
              </select>
            </div>
          </div>
          <button
            onClick={handleSearch}
            className="text-[#F7F7F7] self-stretch min-h-[35px] gap-[5px] text-base whitespace-nowrap w-[120px] bg-black my-auto px-2.5 py-1.5"
          >
            Search
          </button>
        </div>
      </div>
    </div>
  );
};
import React from "react";
import { cn } from "@/lib/utils";

interface SearchHeaderProps {
  className?: string;
}

export const SearchHeader: React.FC<SearchHeaderProps> = ({ className }) => {
  return (
    <header 
      className={cn("self-stretch flex min-h-20 w-full items-center gap-[40px_100px] justify-between flex-wrap max-md:max-w-full", className)}
    >
      <nav className="self-stretch flex min-w-60 items-center gap-[22px] text-lg text-black whitespace-nowrap text-center underline leading-[27px] w-[410px] my-auto">
        <button className="font-bold self-stretch w-[70px] my-auto">
          English
        </button>
        <button className="font-normal self-stretch w-[70px] my-auto">
          Bahasa
        </button>
      </nav>
      
      <img
        src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/e87fdf2e6a52c3585792351a64876ed57ffd9676?placeholderIfAbsent=true"
        alt="TIKET KARYA Logo"
        className="aspect-[1.42] object-contain w-[85px] self-stretch shrink-0 my-auto"
      />
      
      <div className="self-stretch flex min-w-60 items-center gap-[30px] my-auto">
        <button className="text-black text-base font-black text-center self-stretch w-[70px] my-auto">
          SEARCH
        </button>
        <button className="text-black text-[15px] font-medium text-center self-stretch w-[70px] my-auto">
          FORUM
        </button>
        <button className="text-black text-[15px] font-medium text-center self-stretch w-[70px] my-auto">
          ARTICLES
        </button>
        <div className="self-stretch w-[110px] my-auto">
          <button className="items-center shadow-[5px_5px_10px_0px_rgba(0,0,0,0.25)] flex min-h-[50px] w-full gap-[5px] bg-[#FFDEB5] px-2.5 py-[7px] rounded-[50px]">
            <div className="self-stretch flex flex-col overflow-hidden items-stretch justify-center w-5 my-auto px-0.5 py-1">
              <img
                src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/3876d5e0c2a0a2f1beac371be3bd500b058f255a?placeholderIfAbsent=true"
                alt="Arrow down"
                className="aspect-[1.5] object-contain w-[15px]"
              />
            </div>
            <div className="self-stretch flex items-center gap-2.5 overflow-hidden w-5 my-auto px-px">
              <img
                src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/53b785877f9554e64479b6d3d7fa84dd798c3d33?placeholderIfAbsent=true"
                alt="Notification"
                className="aspect-[0.9] object-contain w-[18px] self-stretch my-auto"
              />
            </div>
            <img
              src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/d68ec5cb80433ba0e4c750a2a5b7f6a311291280?placeholderIfAbsent=true"
              alt="Profile"
              className="aspect-[1] object-contain w-9 self-stretch shrink-0 my-auto rounded-[50%]"
            />
          </button>
        </div>
      </div>
    </header>
  );
};
import React, { useState } from "react";
import { SearchHeader } from "./SearchHeader";
import { TiketKaryaLogo } from "./TiketKaryaLogo";
import { SearchBar } from "./SearchBar";
import { FilterSidebar } from "./FilterSidebar";
import { SearchResults } from "./SearchResults";
import { CategorySection } from "./CategorySection";
import { RecommendedSection } from "./RecommendedSection";
import { NewWorkshopsSection } from "./NewWorkshopsSection";
import { Footer } from "./Footer";

// Mock data
const searchResults = [
  {
    id: "1",
    title: "Hand-Build Your Own Pottery",
    organizer: "Clay & Calm Studio",
    description: "Shape, sculpt, and glaze your own clay creation in this hands-on pottery workshop. No experience needed—just bring your creativity!",
    location: "Online (materials shipped)",
    date: "May 30, 2025",
    rating: "4.8",
    participants: "+21 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/8904473754d588dd53da8d14c2017211fde8bfae?placeholderIfAbsent=true",
    isFavorite: true
  },
  {
    id: "2",
    title: "Wheel Throwing for Beginners",
    organizer: "Tierra Ceramics",
    description: "Learn the basics of pottery on the wheel—from centering clay to shaping your first bowl or cup. Ideal for beginners looking to get their hands muddy!",
    location: "Jakarta, Indonesia",
    date: "June 5, 2025",
    rating: "4.8",
    participants: "+17 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/217ed05f3af64ab607f2add90b86a36775352016?placeholderIfAbsent=true",
    isFavorite: false
  },
  {
    id: "3",
    title: "Sculpt Your Own Mug",
    organizer: "Creative Workshop Studio",
    description: "Design and hand-build your own personalized mug in this guided virtual pottery class. Includes a materials kit and live step-by-step instruction.",
    location: "Online (materials shipped)",
    date: "June 10, 2025",
    rating: "4.8",
    participants: "+10 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/e60a30cbdc92c3851a687bbe9e44c5067926164d?placeholderIfAbsent=true",
    isFavorite: true
  }
];

const categories = [
  { id: "painting", name: "Painting", imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/638e2de19dd3f8d4a5f1f89915d51e1251e1f85d?placeholderIfAbsent=true" },
  { id: "pottery", name: "Pottery", imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f18af712f7cc1ba75e07f00803760359e97717f3?placeholderIfAbsent=true" },
  { id: "textile", name: "Textile & Fabric", imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/a7c8b17afa8fc563952e0dbfe320a4bc2de396e9?placeholderIfAbsent=true" },
  { id: "traditional", name: "Traditional Craft", imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/b40b7435b8e63e9c6d5652c928d93249a2e5d9a1?placeholderIfAbsent=true" },
  { id: "music", name: "Music", imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/b40b7435b8e63e9c6d5652c928d93249a2e5d9a1?placeholderIfAbsent=true" },
  { id: "lifestyle", name: "Lifestyle & Home", imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/b40b7435b8e63e9c6d5652c928d93249a2e5d9a1?placeholderIfAbsent=true" },
  { id: "knitting", name: "Knitting", imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/b40b7435b8e63e9c6d5652c928d93249a2e5d9a1?placeholderIfAbsent=true" }
];

const recommendedWorkshops = [
  {
    id: "4",
    title: "Crochet Your First Plushie",
    organizer: "WarmLoops Workshop",
    location: "Yogyakarta, Indonesia",
    date: "May 18, 2025",
    rating: "4.8",
    participants: "+10 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f06b951d36dd6d82dd90dd177b07f519f09a6ecd?placeholderIfAbsent=true",
    isFavorite: true
  },
  {
    id: "5",
    title: "Natural Soap Crafting",
    organizer: "Rani Sari",
    location: "Bali, Indonesia",
    date: "June 20, 2025",
    rating: "4.8",
    participants: "+17 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/6628550609fd5f550036dbd96798cd540a52b7d6?placeholderIfAbsent=true",
    isFavorite: false
  },
  {
    id: "6",
    title: "Batik Tulis on Cotton",
    organizer: "Sanggar Seni Cahaya Nusantara",
    location: "Solo, Indonesia",
    date: "July 3, 2025",
    rating: "4.8",
    participants: "+32 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/83b2e1f1b5bd4387080554b8138734bd0802254c?placeholderIfAbsent=true",
    isFavorite: false
  },
  {
    id: "7",
    title: "Scented Candle Making",
    organizer: "Handmade by Dito",
    location: "Jakarta, Indonesia",
    date: "May 2, 2025",
    rating: "4.8",
    participants: "+22 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/4c79cc464a1367f3b8de7734c121774292633752?placeholderIfAbsent=true",
    isFavorite: false
  },
  {
    id: "8",
    title: "Watercolor for Beginners",
    organizer: "Sketches by Lala",
    location: "Online (Zoom)",
    date: "May 22, 2025",
    rating: "4.8",
    participants: "+37 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/2489873cc995399eaeade183f0db999c66a6905d?placeholderIfAbsent=true",
    isFavorite: false
  },
  {
    id: "9",
    title: "Macramé Wall Hanging",
    organizer: "Craft With Raya",
    location: "Online (Zoom)",
    date: "June 15, 2025",
    rating: "4.8",
    participants: "+19 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/3a33430ec39314e23298aff8c825beecce298d0f?placeholderIfAbsent=true",
    isFavorite: false
  }
];

const newWorkshops = [
  {
    id: "10",
    title: "Urban Sketching:Scenes of Jakarta",
    organizer: "Pak Rino Wibowo",
    location: "Tebet, South Jakarta",
    date: "July 25, 2025",
    rating: "4.8",
    participants: "+14 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/48a48145fa15ac8a038547f9cc35d2865947c5e0?placeholderIfAbsent=true",
    isFavorite: false
  },
  {
    id: "11",
    title: "Anyaman Bamboo Weaving Basics",
    organizer: "Titik Temu Studio",
    location: "Rawamangun, East Jakarta",
    date: "July 27, 2025",
    rating: "4.8",
    participants: "+15 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/bceff1d988426fa1b9542b0109b988ec02320968?placeholderIfAbsent=true",
    isFavorite: false
  },
  {
    id: "12",
    title: "Natural Dyeing: Color from Plants",
    organizer: "Atelier Nusantara",
    location: "Jakarta, Indonesia",
    date: "June 15, 2025",
    rating: "4.8",
    participants: "+21 People",
    imageUrl: "https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f7c47d352ac715e9f72073e46d483c2ff64f8f69?placeholderIfAbsent=true",
    isFavorite: false
  }
];

export const SearchPage: React.FC = () => {
  const [searchQuery, setSearchQuery] = useState("");
  const [searchLocation, setSearchLocation] = useState("Jakarta, Indonesia");
  const [activeFilters, setActiveFilters] = useState({});

  const handleSearch = (query: string, location: string) => {
    setSearchQuery(query);
    setSearchLocation(location);
    console.log(`Searching for "${query}" in ${location}`);
  };

  const handleApplyFilters = (filters: any) => {
    setActiveFilters(filters);
    console.log("Applied filters:", filters);
  };

  const handleJoinWorkshop = (id: string) => {
    console.log(`Joining workshop with ID: ${id}`);
  };

  const handleToggleFavorite = (id: string) => {
    console.log(`Toggling favorite for workshop with ID: ${id}`);
  };

  const handleViewMore = () => {
    console.log("View more workshops");
  };

  const handleCategoryClick = (id: string) => {
    console.log(`Selected category: ${id}`);
  };

  return (
    <div className="bg-[#FCEDDA] pt-1.5">
      <div className="flex w-full flex-col items-center px-[50px] max-md:max-w-full max-md:px-5">
        <SearchHeader />
        <TiketKaryaLogo />
        <SearchBar 
          className="mt-[30px]" 
          onSearch={handleSearch} 
        />
        
        <div className="w-full max-w-[1205px] mt-[60px] max-md:max-w-full max-md:mt-10">
          <div className="gap-5 flex max-md:flex-col max-md:items-stretch">
            <div className="w-[24%] max-md:w-full max-md:ml-0">
              <FilterSidebar onApplyFilters={handleApplyFilters} />
            </div>
            <div className="w-[76%] ml-5 max-md:w-full max-md:ml-0">
              <SearchResults 
                results={searchResults}
                onJoin={handleJoinWorkshop}
                onToggleFavorite={handleToggleFavorite}
                onViewMore={handleViewMore}
              />
            </div>
          </div>
        </div>
        
        <CategorySection 
          title="Explore by categories"
          categories={categories}
          onCategoryClick={handleCategoryClick}
        />
        
        <RecommendedSection 
          title="Recommended for you"
          workshops={recommendedWorkshops}
          onJoin={handleJoinWorkshop}
          onToggleFavorite={handleToggleFavorite}
        />
        
        <NewWorkshopsSection 
          title="New workshop in you area"
          location={searchLocation}
          workshops={newWorkshops}
          onJoin={handleJoinWorkshop}
          onToggleFavorite={handleToggleFavorite}
        />
      </div>
      
      <Footer />
    </div>
  );
};
import React from "react";
import { WorkshopCard } from "./WorkshopCard";
import { cn } from "@/lib/utils";

interface SearchResultsProps {
  className?: string;
  results: Array<{
    id: string;
    title: string;
    organizer: string;
    description: string;
    location: string;
    date: string;
    rating: string;
    participants: string;
    imageUrl: string;
    isFavorite?: boolean;
  }>;
  onJoin?: (id: string) => void;
  onToggleFavorite?: (id: string) => void;
  onViewMore?: () => void;
}

export const SearchResults: React.FC<SearchResultsProps> = ({
  className,
  results,
  onJoin = () => {},
  onToggleFavorite = () => {},
  onViewMore = () => {},
}) => {
  return (
    <div className={cn("flex w-full flex-col items-stretch mt-1.5 max-md:max-w-full max-md:mt-9", className)}>
      <div className="text-black text-sm font-normal">
        <span className="font-extrabold">{results.length}</span> result
      </div>
      
      <div className="flex flex-col gap-5 mt-[15px] max-md:max-w-full">
        {results.map((workshop) => (
          <WorkshopCard
            key={workshop.id}
            workshop={workshop}
            onJoin={onJoin}
            onToggleFavorite={onToggleFavorite}
          />
        ))}
      </div>
      
      <button
        onClick={onViewMore}
        className="text-[#FCEDDA] min-h-[35px] gap-[5px] text-base font-normal bg-[#FF5126] mt-5 px-2.5 py-1.5"
      >
        View More
      </button>
    </div>
  );
};
import React from "react";
import { cn } from "@/lib/utils";

interface TiketKaryaLogoProps {
  className?: string;
}

export const TiketKaryaLogo: React.FC<TiketKaryaLogoProps> = ({ className }) => {
  return (
    <div className={cn("w-[324px] max-w-full text-[#FF5126] mt-10", className)}>
      <div className="text-[#FF5126] self-stretch w-full gap-2.5 text-8xl font-bold p-2.5 max-md:text-[40px]">
        <span className="text-[48px] text-[rgba(255,81,38,1)]">TIKET</span>{" "}
        <span className="text-[48px] text-[rgba(255,81,38,1)]">KARYA</span>
      </div>
      <div className="flex min-h-[91px] w-full items-center gap-2.5 text-9xl font-normal whitespace-nowrap text-center justify-center max-md:text-[40px]">
        <div className="text-[#FF5126] opacity-50 self-stretch flex-1 shrink basis-[0%] my-auto max-md:text-[40px]">
          TK
        </div>
      </div>
    </div>
  );
};
import React from "react";
import { cn } from "@/lib/utils";

interface WorkshopCardProps {
  className?: string;
  variant?: "horizontal" | "vertical";
  workshop: {
    id: string;
    title: string;
    organizer: string;
    description: string;
    location: string;
    date: string;
    rating: string;
    participants: string;
    imageUrl: string;
    isFavorite?: boolean;
  };
  onJoin?: (id: string) => void;
  onToggleFavorite?: (id: string) => void;
}

export const WorkshopCard: React.FC<WorkshopCardProps> = ({
  className,
  variant = "horizontal",
  workshop,
  onJoin = () => {},
  onToggleFavorite = () => {},
}) => {
  const {
    id,
    title,
    organizer,
    description,
    location,
    date,
    rating,
    participants,
    imageUrl,
    isFavorite = false,
  } = workshop;

  if (variant === "horizontal") {
    return (
      <div className={cn("relative flex items-center", className)}>
        <img
          src={imageUrl}
          alt={title}
          className="aspect-[1.65] object-contain w-[380px] self-stretch z-0 min-w-60 my-auto"
        />
        <div className="justify-center items-center self-stretch z-0 flex min-w-60 min-h-[230px] flex-col flex-1 shrink basis-[0%] bg-[#FEE4C4] my-auto px-[23px] py-9 max-md:max-w-full max-md:px-5">
          <div className="w-full max-w-[461px] max-md:max-w-full">
            <div className="flex w-full gap-[40px_63px] max-md:max-w-full">
              <h3 className="text-black text-2xl font-bold leading-[1.2] tracking-[-1.2px]">
                {title}
              </h3>
              <div className="flex items-center gap-[5px] text-[11px] text-black font-normal whitespace-nowrap">
                <img
                  src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/acefdded7f7bad97c4b8fc75b82b6cf7d2eb9078?placeholderIfAbsent=true"
                  alt="Rating"
                  className="aspect-[1] object-contain w-[17px] self-stretch shrink-0 my-auto"
                />
                <div className="self-stretch w-4 my-auto">{rating}</div>
              </div>
            </div>
            <div className="w-full mt-[5px] max-md:max-w-full">
              <div className="flex w-[165px] max-w-full items-stretch gap-1 text-xs text-black font-medium py-px">
                <img
                  src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/108da932a5a420a85c845f02680ca55a394c755f?placeholderIfAbsent=true"
                  alt="Organizer"
                  className="aspect-[1] object-contain w-4 shrink-0"
                />
                <div className="grow shrink w-[142px]">{organizer}</div>
              </div>
              <div className="w-full max-md:max-w-full">
                <p className="self-stretch w-[376px] max-w-full gap-2.5 text-xs text-black font-normal leading-[18px] py-2.5">
                  {description}
                </p>
                <div className="flex w-full gap-[40px_99px] mt-[5px] max-md:max-w-full">
                  <div className="flex flex-col items-stretch text-xs text-black font-normal w-[157px]">
                    <div className="flex w-full items-center gap-1">
                      <img
                        src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/bb6f74dee326d72c34842d575f5f759b10b11214?placeholderIfAbsent=true"
                        alt="Location"
                        className="aspect-[1] object-contain w-3 self-stretch shrink-0 my-auto"
                      />
                      <div className="self-stretch my-auto">{location}</div>
                    </div>
                    <div className="flex items-center gap-1 mt-2.5">
                      <img
                        src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/f984529142f769e5565a02218d3ecb8e42e1188a?placeholderIfAbsent=true"
                        alt="Date"
                        className="aspect-[1] object-contain w-3 self-stretch shrink-0 my-auto"
                      />
                      <div className="self-stretch w-[72px] my-auto">{date}</div>
                    </div>
                  </div>
                  <div className="flex items-center gap-[15px]">
                    <div className="justify-center items-center shadow-[5px_5px_10px_0px_rgba(0,0,0,0.25)] self-stretch flex min-h-[30px] gap-0.5 text-xs text-black font-normal w-[120px] bg-[#FCEDDA] my-auto px-2.5 py-1.5 rounded-[50px]">
                      <img
                        src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/b4b7dc16946def7c86817ab6eb322bc3d1a67dd9?placeholderIfAbsent=true"
                        alt="Participants"
                        className="aspect-[2.38] object-contain w-[38px] self-stretch shrink-0 gap-[-5px] my-auto"
                      />
                      <div className="text-black self-stretch my-auto">
                        {participants}
                      </div>
                    </div>
                    <button
                      onClick={() => onJoin(id)}
                      className="text-[#FCEDDA] self-stretch min-h-[30px] gap-2.5 text-[13px] font-medium whitespace-nowrap w-[70px] bg-[#FF5126] my-auto px-2.5 py-[5px] rounded-[50px]"
                    >
                      Join
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <button
          onClick={() => onToggleFavorite(id)}
          className="absolute z-0 top-1.5 left-[343px]"
          aria-label={isFavorite ? "Remove from favorites" : "Add to favorites"}
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/7d4878d94abdf3b84bec7836df592ae72590f35b?placeholderIfAbsent=true"
            alt="Favorite"
            className="aspect-[1/1] object-contain w-[30px] shrink-0 h-[30px]"
          />
        </button>
      </div>
    );
  }

  // Vertical card variant
  return (
    <div className={cn("", className)}>
      <div className="flex flex-col relative aspect-[1.855] min-h-[200px] w-full gap-2.5 pt-1 pb-[166px] px-1 max-md:pb-[100px]">
        <img
          src={imageUrl}
          alt={title}
          className="absolute h-full w-full object-cover inset-0"
        />
        <button
          onClick={() => onToggleFavorite(id)}
          className="relative items-center rounded bg-[#FFDEB5] flex min-h-[30px] w-[30px] gap-2.5 h-[30px] p-[5px]"
          aria-label={isFavorite ? "Remove from favorites" : "Add to favorites"}
        >
          <img
            src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/8c5b03b4b46fe6de4216366577d5879a8e43364e?placeholderIfAbsent=true"
            alt="Favorite"
            className="aspect-[1] object-contain w-5 self-stretch my-auto"
          />
        </button>
      </div>
      <div className="flex min-h-[140px] w-full flex-col bg-[#FEE4C4] px-[11px] py-3">
        <h3 className="text-black self-stretch gap-2.5 text-2xl font-bold tracking-[-1.2px] leading-[1.2]">
          {title}
        </h3>
        <div className="flex w-full max-w-[345px] gap-[40px_71px] justify-between mt-2">
          <div className="flex flex-col items-stretch w-[234px]">
            <div className="flex items-center gap-1">
              <div className="items-center aspect-[1/1] border border-[color:var(--Dark-Cream,#FFDEB5)] self-stretch flex min-h-4 gap-2.5 w-4 h-4 bg-[#FF5126] my-auto p-1 rounded-lg border-solid">
                <img
                  src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/a3e854bf6c05b637fa4dd260bdec175f64772044?placeholderIfAbsent=true"
                  alt="Organizer icon"
                  className="aspect-[1] object-contain w-2 self-stretch my-auto"
                />
              </div>
              <div className="text-black text-xs font-medium self-stretch my-auto">
                {organizer}
              </div>
            </div>
            <div className="flex w-full items-center gap-2.5 text-xs text-black font-normal mt-[5px]">
              <div className="self-stretch flex items-center gap-1 my-auto">
                <img
                  src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/46a5f3cf97eee7fdd3d793f5c4e7c8cfecb659f0?placeholderIfAbsent=true"
                  alt="Location"
                  className="aspect-[1] object-contain w-3 self-stretch shrink-0 my-auto"
                />
                <div className="self-stretch my-auto">{location}</div>
              </div>
              <div className="self-stretch flex items-center gap-1 my-auto">
                <img
                  src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/61937ad89daf1bacfe5adea9ccbde54044e1bebf?placeholderIfAbsent=true"
                  alt="Date"
                  className="aspect-[1] object-contain w-3 self-stretch shrink-0 my-auto"
                />
                <div className="self-stretch my-auto">{date}</div>
              </div>
            </div>
          </div>
          <div className="flex items-center gap-[5px] text-[11px] text-black font-normal whitespace-nowrap">
            <img
              src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/e6c808677ac0673f51f84c733f91e34175f7e5f3?placeholderIfAbsent=true"
              alt="Rating"
              className="aspect-[1] object-contain w-[17px] self-stretch shrink-0 my-auto"
            />
            <div className="self-stretch w-4 my-auto">{rating}</div>
          </div>
        </div>
        <div className="flex items-center gap-[15px] mt-2">
          <div className="justify-center items-center shadow-[5px_5px_10px_0px_rgba(0,0,0,0.25)] self-stretch flex min-h-[30px] gap-0.5 text-xs text-black font-normal w-[120px] bg-[#FCEDDA] my-auto px-2.5 py-1.5 rounded-[50px]">
            <img
              src="https://cdn.builder.io/api/v1/image/assets/cc19c8fb85a142d1a49f6d5b2b38adc8/fcad08a810256f42ea532abb6ab42544e4684cfd?placeholderIfAbsent=true"
              alt="Participants"
              className="aspect-[2.38] object-contain w-[38px] self-stretch shrink-0 gap-[-5px] my-auto"
            />
            <div className="text-black self-stretch my-auto">{participants}</div>
          </div>
          <button
            onClick={() => onJoin(id)}
            className="text-[#FCEDDA] self-stretch min-h-[30px] gap-2.5 text-[13px] font-medium whitespace-nowrap w-[70px] bg-[#FF5126] my-auto px-2.5 py-[5px] rounded-[50px]"
          >
            Join
          </button>
        </div>
      </div>
    </div>
  );
};
import React from "react";
import { SearchPage } from "@/components/search/SearchPage";

const Index: React.FC = () => {
  return (
    <main>
      <SearchPage />
    </main>
  );
};

export default Index;
